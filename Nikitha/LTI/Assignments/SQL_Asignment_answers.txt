1. Display details of jobs where the minimum salary is greater than 10000.
select * from jobs where MIN_SALARY>10000;

2. Display the first name and join date of the employees who joined between 2002 and 2005.
select FIRST_NAME, HIRE_DATE from employees 
where to_char(HIRE_DATE,'yyyy')Between 2002 AND 2005
ORDER by hire_date;

3. Display first name and join date of the employees who is either IT Programmer or Sales Man.
select first_name,hire_date from employees 
where JOB_ID IN('IT_PROG', 'SA_MAN');

4. Display employees who joined after 1st January 2008.
SELECT * FROM EMPLOYEES WHERE (HIRE_DATE)>'01/01/2008';

5. Display details of employee with ID 150 or 160.
SELECT * FROM EMPLOYEES WHERE EMPLOYEE_ID IN('150','160');

6.
SELECT FIRST_NAME,SALARY,COMMISSION_PCT,HIRE_DATE FROM EMPLOYEES
WHERE SALARY<=10000;

7.
SELECT JOB_TITLE, (MAX_SALARY - MIN_SALARY) FROM JOBS 
WHERE MAX_SALARY BETWEEN 10000 AND 20000;

8.
SELECT FIRST_NAME,SALARY,ROUND(SALARY,1000) FROM EMPLOYEES;

9.
SELECT * FROM JOBS 
ORDER BY JOB_TITLE DESC;

10.
SELECT * FROM EMPLOYEES 
WHERE FIRST_NAME LIKE 'S%' OR LAST_NAME LIKE 'S%';

11.
SELECT * FROM EMPLOYEES 
WHERE TO_CHAR(HIRE_DATE,'MM') IN '05'; 

12.
SELECT * FROM EMPLOYEES
 WHERE COMMISSION_PCT IS NULL 
AND SALARY BETWEEN 5000 AND 10000 
AND DEPARTMENT_ID = 30;

**13.
SELECT FIRST_NAME, HIRE_DATE, LAST_DAY(HIRE_DATE)+1 FROM EMPLOYEES

14.
SELECT FIRST_NAME, HIRE_DATE, FLOOR((SYSDATE-HIRE_DATE)/365) AS EXPERIENCE FROM EMPLOYEES

15.
SELECT FIRST_NAME FROM EMPLOYEES WHERE HIRE_DATE LIKE '%2001';

16.
SELECT INITCAP(FIRST_NAME),INITCAP(LAST_NAME) FROM EMPLOYEES ;

**17.
SELECT JOB_TITLE,  SUBSTR(JOB_TITLE,1, INSTR(JOB_TITLE, ' ')-1) FROM JOBS

**18.

19.
SELECT UPPER(FIRST_NAME),LOWER(EMAIL) FROM EMPLOYEES
where UPPER(email)=UPPER(First_name);

20.
SELECT * FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE,'YYYY')=TO_CHAR(SYSDATE, 'YYYY');

**21.
SELECT (SYSDATE - 01/01/2011) FROM DUAL;

**22.
Select count(EMPLOYEE_ID),TO_CHAR(HIRE_DATE) from employees
where sysdate LIKE'%2021';

23.
SELECT MANAGER_ID, COUNT(*) FROM EMPLOYEES GROUP BY MANAGER_ID

24.
SELECT EMPLOYEE_ID,END_DATE FROM JOB_HISTORY;

25.
SELECT COUNT(EMPLOYEE_ID) FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE,'DD')>15 ;

26.Single row functions are the ones which select multiple rows and give output several rows ..whereas non-single row or multiple row are the ones which choose multiple rows but return a single value like Count(),AVG()etc.
select country_id, count(*) from locations group by country_id;

27. DIFFERENCE BTW HAVING AND WHERE??
SELECT DEPARTMENT_ID,AVG(salary) FROM employees WHERE COMMISSION_PCT IS NOT NULL GROUP BY DEPARTMENT_ID ;

28.
SELECT JOB_ID, COUNT(*), SUM(SALARY), MAX(SALARY)-MIN(SALARY) SALARY FROM EMPLOYEES GROUP BY JOB_ID;

29.
SELECT JOB_ID, AVG(SALARY) FROM EMPLOYEES 
GROUP BY JOB_ID 
HAVING AVG(SALARY)>10000

30.
SELECT TO_CHAR(HIRE_DATE,'YYYY') FROM EMPLOYEES 
GROUP BY TO_CHAR(HIRE_DATE,'YYYY') 
HAVING COUNT(EMPLOYEE_ID) > 10




