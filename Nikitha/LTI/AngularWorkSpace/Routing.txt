The Angular Router Module																	
The Router is a separate module in Angular. It is in its own library package, @angular/router. The Router Module provides the necessary service providers and directives for navigating through application views.																	
																	
																	
Using Angular Router you can																	
Navigate to a specific view by typing a URL in the address bar																	
Pass optional parameters to the View																	
Bind the clickable elements to the View and load the view when user performs application tasks																	
Handles back and forward buttons of the browser																	
Allows you to dynamically load the view																	
Protect the routes from unauthorized users using Guards																	

STEP1:
	where to write: app.component.html
	routerLink="/products"
	routerLinkActive="mystyle" -styling in css when user click that particular link/option

STEP2:
	app.routing.module.ts
	it has Routes array which holds all the paths

	{path:"products",component:ProductComponent}
--------why can't we write /products as path?--------
	index.html has the base href="/" default it is there

path=""  default page if url has no path added
path="*" searches all the paths when dosen't find any path if you have error component
         or when you want to display message to user like message not found etc. when url is improper
	 it is called WILDCARD ROUTING

STEP3:
	<router-outlet></router-outlet> (location those components data gets displayed)

----------------------------------------------------------------------------------------------------------------------------

Static data in component - manually array, variables,data
application has many components these components may get data from utside application
components get the data from outside application
Services will bring the data 

What are services:
Angular services are singleton objects that get instantiated 
only once during the lifetime of an application.
Theycontain methods that get data dynamically
**thay share business logic,models,or data and functions
with different components of an angular application.

Acompo Bcompo -multiple compo constructors are created
======================================================================
How to create Service?

ng g s service-name;

has Decorator:
@Injectable
{
providedln:'root'; --service is injected at rootComponent(avail through app)
}

<app-Acomponent>
--without this

where do we mention services to be added?
providers array[];module.ts file
-----------------------------------------------
Forms- template driven and Reactive form

mandatory- while working with them
import:FormsModule
reactive forms: ReactiveForms Module


Components which has form related data-
import- FormBuilder, Validators

else-[Form control]

 They contain methods that maintain data throughout the life of an 
application, i.e. data does not get refreshed and is available 
all the time. 
The main objective of a service is to organize 
and share business logic, models, or data 
and functions with different components of an Angular application.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------																	
Components of Angular Router Module																	
																	
Router																	
The Angular Router is an object that enables navigation from one component to the next component as users perform application tasks like clicking on menus links, buttons or clicking on back/forward button on the browser.																	
																	
Route																	
Route tells the Angular Router which view to display when a user clicks a link or pastes a URL into the browser address bar. Every Route consists of a path and a component it is mapped to. The Router object parses and builds the final URL using the Route																	
																	
RuterOutlet																	
The outerOutlet is a directive (<router-outlet>) that serves as a placeholder, where the Router should display the view																	
RouterLink																	
The RouterLink is a directive that binds the HTML element to a Route. Clicking on the HTML element, which is bound to a RouterLink, will result in navigation to the Route. The RouterLink may contain parameters to be passed to the route’s component.																	
RouterLinkActive																	
RouterLinkActive is a directive for adding or removing classes from an HTML element that is bound to a RouterLink. Using this directive, we can toggle CSS classes for active RouterLinks based on the current RouterState																	
ActivatedRoute																	
The ActivatedRoute is an object that represents the currently activated route associated with the loaded Component.																	
RouterState																	
The current state of the router including a tree of the currently activated routes together with convenience methods for traversing the route tree.																	
RouteLink Parameters array																	
The Parameters or arguments to the Route. It is an array which you can bind to RouterLink directive or pass it as an argument to the Router.navigate method.																	
