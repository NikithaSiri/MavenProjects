contents:
joins- 
cartesian product | cross join
equi join | inner join- natural join
non-equi join | USING ON - sal compare-hisal,losal(data type example)
outer joins|LEFT OUTER JOIN and RIGHT OUTER JOIN
self join- find managers






--check autocommit status ;
CREATE TABLE DEPT
(
DEPTNO NUMBER(2) NOT NULL,
DNAME VARCHAR2(14),
LOC VARCHAR2(13),
CONSTRAINT DEPT_PRIMARY_KEY PRIMARY KEY (DEPTNO)
);

INSERT INTO DEPT VALUES (10,'ACCOUNTING','NEW YORK');
INSERT INTO DEPT VALUES (20,'RESEARCH','DALLAS');
INSERT INTO DEPT VALUES (30,'SALES','CHICAGO');
INSERT INTO DEPT VALUES (40,'OPERATIONS','BOSTON');

CREATE TABLE EMP (
EMPNO NUMBER(4) NOT NULL,
ENAME VARCHAR2(10),
JOB VARCHAR2(9),
MGR NUMBER(4) CONSTRAINT EMP_SELF_KEY REFERENCES EMP (EMPNO),
HIREDATE DATE,
SAL NUMBER(7,2),
COMM NUMBER(7,2),
DEPTNO NUMBER(2) NOT NULL,
CONSTRAINT EMP_FOREIGN_KEY FOREIGN KEY (DEPTNO) REFERENCES DEPT (DEPTNO),
CONSTRAINT EMP_PRIMARY_KEY PRIMARY KEY (EMPNO)
);

INSERT INTO EMP VALUES (7839,'KING','PRESIDENT',NULL,'17-NOV-81',5000,NULL,10);
INSERT INTO EMP VALUES (7698,'BLAKE','MANAGER',7839,'1-MAY-81',2850,NULL,30);
INSERT INTO EMP VALUES (7782,'CLARK','MANAGER',7839,'9-JUN-81',2450,NULL,10);
INSERT INTO EMP VALUES (7566,'JONES','MANAGER',7839,'2-APR-81',2975,NULL,20);
INSERT INTO EMP VALUES (7654,'MARTIN','SALESMAN',7698,'28-SEP-81',1250,1400,30);
INSERT INTO EMP VALUES (7499,'ALLEN','SALESMAN',7698,'20-FEB-81',1600,300,30);
INSERT INTO EMP VALUES (7844,'TURNER','SALESMAN',7698,'8-SEP-81',1500,0,30);
INSERT INTO EMP VALUES (7900,'JAMES','CLERK',7698,'3-DEC-81',950,NULL,30);
INSERT INTO EMP VALUES (7521,'WARD','SALESMAN',7698,'22-FEB-81',1250,500,30);
INSERT INTO EMP VALUES (7902,'FORD','ANALYST',7566,'3-DEC-81',3000,NULL,20);
INSERT INTO EMP VALUES (7369,'SMITH','CLERK',7902,'17-DEC-80',800,NULL,20);
INSERT INTO EMP VALUES (7788,'SCOTT','ANALYST',7566,'09-DEC-82',3000,NULL,20);
INSERT INTO EMP VALUES (7876,'ADAMS','CLERK',7788,'12-JAN-83',1100,NULL,20);
INSERT INTO EMP VALUES (7934,'MILLER','CLERK',7782,'23-JAN-82',1300,NULL,10);

CREATE TABLE BONUS (
ENAME VARCHAR2(10),
JOB CHAR(9),
SAL NUMBER,
COMM NUMBER);

CREATE TABLE SALGRADE (
GRADE NUMBER,
LOSAL NUMBER,
HISAL NUMBER);

INSERT INTO SALGRADE VALUES (1,700,1200);
INSERT INTO SALGRADE VALUES (2,1201,1400);
INSERT INTO SALGRADE VALUES (3,1401,2000);
INSERT INTO SALGRADE VALUES (4,2001,3000);
INSERT INTO SALGRADE VALUES (5,3001,9999);

commit ;

    set pagesize 25;

    set numwidth 8;
select linesize 120;
slect *from emp;

create  connect , resource , create session to hr; 
----------------------------------------------------------------------
select * from emp
where job='SALESMAN' and deptno=30;

select * from emp where ename = 'KING';

SELECT deptno,MIN(sal) from emp GROUP BY deptno;

select job,deptno,max(sal)
from emp
where hiredate='12-JAN-81'
group by job,deptno
having sum(sal)>3000
order by deptno;
---order of execution where,grouping,groups eliminaed with having then resukt based on columns is ordered
-----------------------------------------------------------------------------------------------------------------------------
JOINS:
select empno,ename,dept.deptno,dname,loc
from emp,dept
where emp.deptno(+)=dept.deptno; --(+) to get null row on emp.deptno side

select empno,ename,dept.deptno,dname,loc
from emp,dept
where dept.deptno=emp.deptno(+); 

select empno,ename,dept.deptno,dname,loc
from emp,dept
where emp.deptno=dept.deptno(+);

select empno,ename,dept.deptno,dname,loc
from emp,dept
where emp.deptno(+)=dept.deptno(+); -- (+) on both sides is not allowed

select empno,ename,dept.deptno,dname,loc
from emp RIGHT OUTER JOIN dept on (emp.deptno=dept.deptno)

select empno,ename,dept.deptno,dname,loc
from dept LEFT OUTER JOIN emp on (emp.deptno=dept.deptno)
---------------------------------------------------------------------------------
JOIN more than three tables?

emp.deptno=dept.deptno AND dept.ho_id=HO.ho_id
-----------------------------------------------------------
NORMALIZATION:
1NF
2NF
3NF
---------------------------------------------------------
Single-row sub query:
select * from emp where deptno=(select deptno from emp where ename='Allen')

--if inner query or subquery returns null,outer query returns null,it doesnot show any error


select *  from emp
where deptno=(select deptno from emp where ename='ALLEN')
   
select deptno from emp where ename='ALLEN'

select * from emp where deptno > (select deptno from emp where ename='SMITH')

select * from emp where sal > (select sal from emp where ename='SMITH')

select * from emp where sal>(select sal from emp where empno=7876) and job=(select job from emp where empno=7369)

select * from emp where sal > (select sal from emp where empno= 7876) AND
job LIKE (select job from emp where empno = 7369);
----------------------------------------------------------------------------------------------
OPERATORS:

<Any less than MAX

<ALL Less than MIN 

>ANY  More than min

>ALL More than MAX 

--------------------------------------------------------------------------------------------------------------------------------
SUBQUERIES:
1.single row : =,>,<,>=,<=
2.Multiple row subquery: IN,NOT IN ,>ANY, <ANY,>ALL,<ALL
3.CORRELATED SUBQUERY: EXISTS, NOT EXISTS

-> Each sub query is executed once per each row processed by the parent query
-> Returns true/false
-> EXIST operator

select ename,empno,job from emp e where EXISTS (select mgr from emp  where(emp.mgr=e.empno) )
--------------------------------------------------------------------------------------------------------
CONSTRAINTS:
Types:
Column level:
 i) NOT NULL - allows duplicate values
 ii) UNIQUE - allows many null values
 iii) DEFAULT- if user don't put values manually -system own default value example: city Varchar2(10) DEFAULT 'MUMBAI'
 iv) CHECK- example: CHECK city IN('Mumbai','delhi','banglore')
Table level:
  i) primary key- should be unique and not null
     example: create table emp
              (
                empno number(10),
                -----
                -----
                deptno number(2),
                CONSTRAINT pk_emp_empno PRIMARY KEY(empno)
  ii)foreign key( also called referential key,integrity constraint,- parent table with same column, data type should be ready, datat type should be exactly same, and it has to be primary key
 CONSTRAINT fk1 FOREIGN KEY(deptno) refernces dept(deptno) ON DELETE CASCADE SET NULL